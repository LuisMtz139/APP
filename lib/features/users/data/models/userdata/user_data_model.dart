import 'package:app_cirugia_endoscopica/features/users/domain/entities/user_data_entity.dart';



class UserDataModel extends UserDataEntity {
  UserDataModel({
    required super.id,
    required super.rfc,
    super.curp,
    required super.nombre,
    required super.apellidoPaterno,
    required super.apellidoMaterno,
    required super.residente,
    required super.genero,
    super.fechaNacimiento,
    required super.correoElectronico,
    super.imagen,
    required super.correoElectronicoAlterno,
    required super.especialidad1,
    required super.especialidad2,
    required super.especialidad3,
    required super.celular,
    required super.telefonoCasa,
    required super.calle,
    required super.numeroExterior,
    required super.numeroInterior,
    required super.colonia,
    required super.codigoPostal,
    required super.municipioAlcaldia,
    required super.estado,
    required super.pais,
    required super.consultorioCalle,
    required super.consultorioNumeroExterior,
    required super.consultorioNumeroInterior,
    required super.consultorioColonia,
    required super.consultorioCodigoPostal,
    required super.consultorioMunicipioAlcaldia,
    required super.consultorioEstado,
    required super.consultorioPais,
    required super.consultorioTelefono,
    required super.nombreAsistente,
    required super.telefonoAsistente,
    required super.hospital,
    required super.razonSocial,
    required super.regimenFiscal,
    required super.codigoPostalFiscal,
    required super.correoFiscal,
    required super.membresiaId,
    required super.nombreMembresia,
    required super.estatus,
    super.membresiaExpiracion,
    required super.creadoEl,
    required super.fullName,
  });

  factory UserDataModel.fromJson(Map<String, dynamic> json) {
    return UserDataModel(
      id: json['id'] ?? 0,
      rfc: json['rfc'] ?? '',
      curp: json['curp'],
      nombre: json['nombre'] ?? '',
      apellidoPaterno: json['apellidoPaterno'] ?? '',
      apellidoMaterno: json['apellidoMaterno'] ?? '',
      residente: json['residente'] ?? '',
      genero: json['genero'] ?? '',
      fechaNacimiento: json['fechaNacimiento'],
      correoElectronico: json['correoElectronico'] ?? '',
      imagen: json['imagen'],
      correoElectronicoAlterno: json['correoElectronicoAlterno'] ?? '',
      especialidad1: json['especialidad1'] ?? '',
      especialidad2: json['especialidad2'] ?? '',
      especialidad3: json['especialidad3'] ?? '',
      celular: json['celular'] ?? '',
      telefonoCasa: json['telefonoCasa'] ?? '',
      calle: json['calle'] ?? '',
      numeroExterior: json['numeroExterior'] ?? '',
      numeroInterior: json['numeroInterior'] ?? '',
      colonia: json['colonia'] ?? '',
      codigoPostal: json['codigoPostal'] ?? '',
      municipioAlcaldia: json['municipioAlcaldia'] ?? '',
      estado: json['estado'] ?? '',
      pais: json['pais'] ?? '',
      consultorioCalle: json['consultorioCalle'] ?? '',
      consultorioNumeroExterior: json['consultorioNumeroExterior'] ?? '',
      consultorioNumeroInterior: json['consultorioNumeroInterior'] ?? '',
      consultorioColonia: json['consultorioColonia'] ?? '',
      consultorioCodigoPostal: json['consultorioCodigoPostal'] ?? '',
      consultorioMunicipioAlcaldia: json['consultorioMunicipioAlcaldia'] ?? '',
      consultorioEstado: json['consultorioEstado'] ?? '',
      consultorioPais: json['consultorioPais'] ?? '',
      consultorioTelefono: json['consultorioTelefono'] ?? '',
      nombreAsistente: json['nombreAsistente'] ?? '',
      telefonoAsistente: json['telefonoAsistente'] ?? '',
      hospital: json['hospital'] ?? '',
      razonSocial: json['razonSocial'] ?? '',
      regimenFiscal: json['regimenFiscal'] ?? '',
      codigoPostalFiscal: json['codigoPostalFiscal'] ?? '',
      correoFiscal: json['correoFiscal'] ?? '',
      membresiaId: json['membresiaId'] ?? 0,
      nombreMembresia: json['nombreMembresia'] ?? '',
      estatus: json['estatus'] ?? '',
      membresiaExpiracion: json['membresiaExpiracion'],
      creadoEl: json['creadoEl'] ?? '',
      fullName: json['fullName'] ?? '',
    );
  }

  factory UserDataModel.fromEntity(UserDataEntity entity) {
    return UserDataModel(
      id: entity.id,
      rfc: entity.rfc,
      curp: entity.curp,
      nombre: entity.nombre,
      apellidoPaterno: entity.apellidoPaterno,
      apellidoMaterno: entity.apellidoMaterno,
      residente: entity.residente,
      genero: entity.genero,
      fechaNacimiento: entity.fechaNacimiento,
      correoElectronico: entity.correoElectronico,
      imagen: entity.imagen,
      correoElectronicoAlterno: entity.correoElectronicoAlterno,
      especialidad1: entity.especialidad1,
      especialidad2: entity.especialidad2,
      especialidad3: entity.especialidad3,
      celular: entity.celular,
      telefonoCasa: entity.telefonoCasa,
      calle: entity.calle,
      numeroExterior: entity.numeroExterior,
      numeroInterior: entity.numeroInterior,
      colonia: entity.colonia,
      codigoPostal: entity.codigoPostal,
      municipioAlcaldia: entity.municipioAlcaldia,
      estado: entity.estado,
      pais: entity.pais,
      consultorioCalle: entity.consultorioCalle,
      consultorioNumeroExterior: entity.consultorioNumeroExterior,
      consultorioNumeroInterior: entity.consultorioNumeroInterior,
      consultorioColonia: entity.consultorioColonia,
      consultorioCodigoPostal: entity.consultorioCodigoPostal,
      consultorioMunicipioAlcaldia: entity.consultorioMunicipioAlcaldia,
      consultorioEstado: entity.consultorioEstado,
      consultorioPais: entity.consultorioPais,
      consultorioTelefono: entity.consultorioTelefono,
      nombreAsistente: entity.nombreAsistente,
      telefonoAsistente: entity.telefonoAsistente,
      hospital: entity.hospital,
      razonSocial: entity.razonSocial,
      regimenFiscal: entity.regimenFiscal,
      codigoPostalFiscal: entity.codigoPostalFiscal,
      correoFiscal: entity.correoFiscal,
      membresiaId: entity.membresiaId,
      nombreMembresia: entity.nombreMembresia,
      estatus: entity.estatus,
      membresiaExpiracion: entity.membresiaExpiracion,
      creadoEl: entity.creadoEl,
      fullName: entity.fullName,
    );
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'rfc': rfc,
      'curp': curp,
      'nombre': nombre,
      'apellidoPaterno': apellidoPaterno,
      'apellidoMaterno': apellidoMaterno,
      'residente': residente,
      'genero': genero,
      'fechaNacimiento': fechaNacimiento,
      'correoElectronico': correoElectronico,
      'imagen': imagen,
      'correoElectronicoAlterno': correoElectronicoAlterno,
      'especialidad1': especialidad1,
      'especialidad2': especialidad2,
      'especialidad3': especialidad3,
      'celular': celular,
      'telefonoCasa': telefonoCasa,
      'calle': calle,
      'numeroExterior': numeroExterior,
      'numeroInterior': numeroInterior,
      'colonia': colonia,
      'codigoPostal': codigoPostal,
      'municipioAlcaldia': municipioAlcaldia,
      'estado': estado,
      'pais': pais,
      'consultorioCalle': consultorioCalle,
      'consultorioNumeroExterior': consultorioNumeroExterior,
      'consultorioNumeroInterior': consultorioNumeroInterior,
      'consultorioColonia': consultorioColonia,
      'consultorioCodigoPostal': consultorioCodigoPostal,
      'consultorioMunicipioAlcaldia': consultorioMunicipioAlcaldia,
      'consultorioEstado': consultorioEstado,
      'consultorioPais': consultorioPais,
      'consultorioTelefono': consultorioTelefono,
      'nombreAsistente': nombreAsistente,
      'telefonoAsistente': telefonoAsistente,
      'hospital': hospital,
      'razonSocial': razonSocial,
      'regimenFiscal': regimenFiscal,
      'codigoPostalFiscal': codigoPostalFiscal,
      'correoFiscal': correoFiscal,
      'membresiaId': membresiaId,
      'nombreMembresia': nombreMembresia,
      'estatus': estatus,
      'membresiaExpiracion': membresiaExpiracion,
      'creadoEl': creadoEl,
      'fullName': fullName,
    };
  }
}